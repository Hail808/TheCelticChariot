
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.2
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.2",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.AddressScalarFieldEnum = {
  address_id: 'address_id',
  street_line1: 'street_line1',
  street_line2: 'street_line2',
  city: 'city',
  state: 'state',
  postal_code: 'postal_code',
  country: 'country'
};

exports.Prisma.CategoryScalarFieldEnum = {
  category_id: 'category_id',
  name: 'name'
};

exports.Prisma.CustomerScalarFieldEnum = {
  customer_id: 'customer_id',
  first_name: 'first_name',
  last_name: 'last_name',
  email: 'email',
  password: 'password',
  phone_num: 'phone_num',
  last_login: 'last_login',
  fk_ship_address_id: 'fk_ship_address_id',
  fk_bill_address_id: 'fk_bill_address_id'
};

exports.Prisma.GuestScalarFieldEnum = {
  guest_id: 'guest_id',
  email: 'email',
  phone_num: 'phone_num',
  fk_ship_address_id: 'fk_ship_address_id',
  fk_bill_address_id: 'fk_bill_address_id'
};

exports.Prisma.InventoryScalarFieldEnum = {
  item_id: 'item_id',
  name: 'name',
  category: 'category',
  tags: 'tags',
  price: 'price'
};

exports.Prisma.InvoiceScalarFieldEnum = {
  invoice_id: 'invoice_id',
  fk_order_id: 'fk_order_id',
  invoice_number: 'invoice_number',
  invoice_date: 'invoice_date',
  total_price: 'total_price',
  due_date: 'due_date',
  payment_status: 'payment_status'
};

exports.Prisma.Order_itemScalarFieldEnum = {
  order_item_id: 'order_item_id',
  fk_order_id: 'fk_order_id',
  fk_product_id: 'fk_product_id',
  quantity: 'quantity',
  price: 'price'
};

exports.Prisma.OrdersScalarFieldEnum = {
  order_id: 'order_id',
  order_date: 'order_date',
  total_price: 'total_price',
  order_status: 'order_status',
  fk_ship_address_id: 'fk_ship_address_id',
  fk_bill_address_id: 'fk_bill_address_id',
  fk_customer_id: 'fk_customer_id',
  fk_guest_id: 'fk_guest_id'
};

exports.Prisma.PaymentScalarFieldEnum = {
  payment_id: 'payment_id',
  fk_invoice_id: 'fk_invoice_id',
  payment_method: 'payment_method',
  payment_date: 'payment_date',
  amount_paid: 'amount_paid'
};

exports.Prisma.ProductScalarFieldEnum = {
  product_id: 'product_id',
  product_name: 'product_name',
  description: 'description',
  price: 'price',
  inventory: 'inventory',
  prod_image_url: 'prod_image_url',
  fk_category_id: 'fk_category_id'
};

exports.Prisma.ReviewsScalarFieldEnum = {
  review_id: 'review_id',
  review_text: 'review_text',
  review_date: 'review_date',
  rating: 'rating',
  fk_customer_id: 'fk_customer_id',
  fk_product_id: 'fk_product_id'
};

exports.Prisma.ShippingScalarFieldEnum = {
  shipping_id: 'shipping_id',
  fk_order_id: 'fk_order_id',
  fk_shipping_address_id: 'fk_shipping_address_id',
  tracking_num: 'tracking_num',
  carrier: 'carrier',
  shipping_status: 'shipping_status'
};

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  name: 'name',
  email: 'email',
  emailVerified: 'emailVerified',
  image: 'image',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SessionScalarFieldEnum = {
  id: 'id',
  expiresAt: 'expiresAt',
  token: 'token',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  ipAddress: 'ipAddress',
  userAgent: 'userAgent',
  userId: 'userId'
};

exports.Prisma.AccountScalarFieldEnum = {
  id: 'id',
  accountId: 'accountId',
  providerId: 'providerId',
  userId: 'userId',
  accessToken: 'accessToken',
  refreshToken: 'refreshToken',
  idToken: 'idToken',
  accessTokenExpiresAt: 'accessTokenExpiresAt',
  refreshTokenExpiresAt: 'refreshTokenExpiresAt',
  scope: 'scope',
  password: 'password',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.VerificationScalarFieldEnum = {
  id: 'id',
  identifier: 'identifier',
  value: 'value',
  expiresAt: 'expiresAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.payment_status = exports.$Enums.payment_status = {
  pending: 'pending',
  paid: 'paid',
  overdue: 'overdue',
  partially_paid: 'partially_paid',
  cancelled: 'cancelled',
  refunded: 'refunded'
};

exports.shipping_status = exports.$Enums.shipping_status = {
  delivered: 'delivered',
  shipped: 'shipped',
  not_yet_shipped: 'not_yet_shipped'
};

exports.Prisma.ModelName = {
  address: 'address',
  category: 'category',
  customer: 'customer',
  guest: 'guest',
  inventory: 'inventory',
  invoice: 'invoice',
  order_item: 'order_item',
  orders: 'orders',
  payment: 'payment',
  product: 'product',
  reviews: 'reviews',
  shipping: 'shipping',
  User: 'User',
  Session: 'Session',
  Account: 'Account',
  Verification: 'Verification'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
